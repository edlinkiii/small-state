export class SmallState{static #a;#b;#c;#d;#e;constructor(){if(SmallState.#a)return SmallState.#a;this.#b={},this.#c={},this.#d=[],this.#e={},SmallState.#a=this}add(t,e,s=!1){return this.#b.hasOwnProperty(t)?(console.error("Specified state property already exists."),!1):(this.#c[t]=e,this.#b[t]=void 0,this.#e[t]=[],this.reset(t),s&&this.#d.push(t),this)}get(t){return this.#b.hasOwnProperty(t)?this.#b[t]:(console.error("Specified state property does not exist."),!1)}set(t,e){return this.#b.hasOwnProperty(t)?this.#d.includes(t)?(console.error("Specified state property is not alterable."),!1):(this.#b[t]=e,this.emit(t),e):(console.error("Specified state property does not exist."),!1)}reset(t){return this.#b.hasOwnProperty(t)?this.#d.includes(t)?(console.error("Specified state property is not alterable."),!1):this.set(t,this.#c[t]):(console.error("Specified state property does not exist."),!1)}remove(t){return this.#b.hasOwnProperty(t)?this.#d.includes(t)?(console.error("Specified state property is not alterable."),!1):(delete this.#b[t],delete this.#c[t],delete this.#e[t],this.#d=this.#d.filter(e=>e!==t),this):(console.error("Specified state property does not exist."),!1)}subscribe(t,e){if("string"==typeof t&&!this.#b.hasOwnProperty(t)){console.error("Specified state property does not exist.");return}Array.isArray(t)?t.forEach(t=>this.subscribe(t,e)):this.#e[t].push(e)}unsubscribe(t,e=null){Array.isArray(t)?t.forEach(t=>this.unsubscribe(t,e)):this.#e[t]=null===e?[]:this.#e[t].filter(t=>t!==e)}emit(t){this.#e[t].forEach(e=>e(this.get(t)))}}